{
  "name": "conf_conf",
  "version": "0.1.0",
  "description": "Enforce configuration options for your app",
  "main": "index.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "keywords": [
    "config",
    "configuration",
    "environment"
  ],
  "author": {
    "name": "Thomas Ingram"
  },
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "git@github.com:ravinggenius/conf_conf.git"
  },
  "bugs": {
    "url": "https://github.com/ravinggenius/conf_conf/issues"
  },
  "homepage": "https://github.com/ravinggenius/conf_conf",
  "dependencies": {
    "humps": "0.0.1",
    "lodash": "^2.4.1"
  },
  "devDependencies": {
    "expect.js": "^0.3.1",
    "mocha": "^1.21.4"
  },
  "readme": "## ConfConf\n\nConfConf is a shameless port of a [Ruby gem](https://rubygems.org/gems/conf_conf) by the same name to Node. It is meant to be used with environment variables, but it also accepts flat raw configuration object.\n\n\n### Usage\n\nUse ConfConf to verify that your application is properly configured, with canonical names for required values.\n\n```javascript\n// config.js\nmodule.exports = ConfConf.configure(process.env, function (conf) {\n\t// by default `conf.fooBar` will be assigned whatever value `process.env.FOO_BAR` has\n\tconf.config('fooBar');\n\n\t// rename env keys if you like\n\tconf.config('foo', { from: 'FOO_BAR' });\n\n\t// registered configs are required unless a default is given\n\tconf.config('nodeEnv', { default: 'development' });\n\n\t// baz is now boolean and defaults to false\n\tconf.config('baz', { default: 'false' }, function (baz) {\n\t\treturn baz === 'true';\n\t});\n});\n```\n\n```javascript\n// app.js\nvar config = require('./config');\nconfig.nodeEnv;\n```\n\n\n### License\n\nConfConf is released under the [MIT license](http://opensource.org/licenses/MIT).\n",
  "readmeFilename": "README.md",
  "gitHead": "f6c6a0d295589d939e6dfc0840f7e5d8a63b8a40",
  "_id": "conf_conf@0.1.0",
  "_shasum": "3edfd8318153568bc08c5cce6dd2aacd476e395a",
  "_from": "conf_conf@*"
}
